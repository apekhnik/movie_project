// src/components/SearchInput.tsx
"use client";

import styled from "styled-components";

// –°—Ç–∏–ª–∏ –¥–ª—è –æ–±—ë—Ä—Ç–∫–∏ –∏–Ω–ø—É—Ç–∞
const SearchWrapper = styled.div`
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  max-width: 400px; /* –û–≥—Ä–∞–Ω–∏—á–∏–º —à–∏—Ä–∏–Ω—É –∏–Ω–ø—É—Ç–∞ */
`;

// –°—Ç–∏–ª–∏ –¥–ª—è –∏–Ω–ø—É—Ç–∞
const SearchInputStyled = styled.input`
  width: 100%;
  padding: 0.5rem 1rem 0.5rem 2.5rem; /* –û—Ç—Å—Ç—É–ø —Å–ª–µ–≤–∞ –¥–ª—è –ª—É–ø—ã */
  background: rgba(55, 65, 81, 0.5); /* –¢—ë–º–Ω—ã–π –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω (#374151 —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é) */
  border: none;
  border-radius: 1rem; /* –ó–∞–∫—Ä—É–≥–ª—ë–Ω–Ω—ã–µ –∫—Ä–∞—è */
  color: #d1d5db; /* –°–≤–µ—Ç–ª—ã–π —Ç–µ–∫—Å—Ç (#d1d5db - gray-300) */
  font-size: 1rem;

  &::placeholder {
    color: #d1d5db; /* –°–≤–µ—Ç–ª—ã–π —Ü–≤–µ—Ç –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞ */
    opacity: 0.7;
  }

  &:focus {
    outline: none;
    background: rgba(55, 65, 81, 0.7); /* –ß—É—Ç—å —è—Ä—á–µ –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ */
  }
`;

// –°—Ç–∏–ª–∏ –¥–ª—è –∏–∫–æ–Ω–∫–∏ –ª—É–ø—ã
const SearchIcon = styled.span`
  position: absolute;
  left: 0.75rem;
  color: #d1d5db; /* –°–≤–µ—Ç–ª—ã–π —Ü–≤–µ—Ç –ª—É–ø—ã */
  font-size: 1.25rem;
`;

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–Ω–ø—É—Ç–∞
interface SearchInputProps {
    value: string;
    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;
    placeholder?: string;
}

export const SearchInput = ({ value, onChange, placeholder = "–ü–æ–∏—Å–∫ —Ç—Ä–µ–∫–æ–≤, –∞–ª—å–±–æ–º–æ–≤, –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π, –ø–æ–¥–∫–∞—Å—Ç" }: SearchInputProps) => {
    return (
        <SearchWrapper>
            <SearchIcon>üîç</SearchIcon>
            <SearchInputStyled
                type="text"
                value={value}
                onChange={onChange}
                placeholder={placeholder}
            />
        </SearchWrapper>
    );
};
